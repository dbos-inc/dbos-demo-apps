/* tslint:disable */
/* eslint-disable */
/**
 * bank-backend
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DepositRequestHistory
 */
export interface DepositRequestHistory {
    /**
     * bigint
     * @type {number}
     * @memberof DepositRequestHistory
     */
    txnId?: number;
    /**
     * bigint
     * @type {number}
     * @memberof DepositRequestHistory
     */
    fromAccountId: number;
    /**
     * 
     * @type {string}
     * @memberof DepositRequestHistory
     */
    fromLocation: string;
    /**
     * bigint
     * @type {number}
     * @memberof DepositRequestHistory
     */
    toAccountId: number;
    /**
     * 
     * @type {string}
     * @memberof DepositRequestHistory
     */
    toLocation: string;
    /**
     * 
     * @type {number}
     * @memberof DepositRequestHistory
     */
    amount: number;
    /**
     * 
     * @type {Date}
     * @memberof DepositRequestHistory
     */
    timestamp?: Date;
}

/**
 * Check if a given object implements the DepositRequestHistory interface.
 */
export function instanceOfDepositRequestHistory(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fromAccountId" in value;
    isInstance = isInstance && "fromLocation" in value;
    isInstance = isInstance && "toAccountId" in value;
    isInstance = isInstance && "toLocation" in value;
    isInstance = isInstance && "amount" in value;

    return isInstance;
}

export function DepositRequestHistoryFromJSON(json: any): DepositRequestHistory {
    return DepositRequestHistoryFromJSONTyped(json, false);
}

export function DepositRequestHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): DepositRequestHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'txnId': !exists(json, 'txnId') ? undefined : json['txnId'],
        'fromAccountId': json['fromAccountId'],
        'fromLocation': json['fromLocation'],
        'toAccountId': json['toAccountId'],
        'toLocation': json['toLocation'],
        'amount': json['amount'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
    };
}

export function DepositRequestHistoryToJSON(value?: DepositRequestHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'txnId': value.txnId,
        'fromAccountId': value.fromAccountId,
        'fromLocation': value.fromLocation,
        'toAccountId': value.toAccountId,
        'toLocation': value.toLocation,
        'amount': value.amount,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
    };
}

