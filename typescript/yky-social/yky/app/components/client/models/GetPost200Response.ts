/* tslint:disable */
/* eslint-disable */
/**
 * social-ts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetPost200ResponseAnyOf } from './GetPost200ResponseAnyOf';
import {
    GetPost200ResponseAnyOfFromJSON,
    GetPost200ResponseAnyOfFromJSONTyped,
    GetPost200ResponseAnyOfToJSON,
} from './GetPost200ResponseAnyOf';
import type { GetPost200ResponseAnyOf1 } from './GetPost200ResponseAnyOf1';
import {
    GetPost200ResponseAnyOf1FromJSON,
    GetPost200ResponseAnyOf1FromJSONTyped,
    GetPost200ResponseAnyOf1ToJSON,
} from './GetPost200ResponseAnyOf1';

/**
 * 
 * @export
 * @interface GetPost200Response
 */
export interface GetPost200Response {
    /**
     * 
     * @type {string}
     * @memberof GetPost200Response
     */
    message: string;
    /**
     * 
     * @type {any}
     * @memberof GetPost200Response
     */
    post: any | null;
}

/**
 * Check if a given object implements the GetPost200Response interface.
 */
export function instanceOfGetPost200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "post" in value;

    return isInstance;
}

export function GetPost200ResponseFromJSON(json: any): GetPost200Response {
    return GetPost200ResponseFromJSONTyped(json, false);
}

export function GetPost200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPost200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': json['message'],
        'post': json['post'],
    };
}

export function GetPost200ResponseToJSON(value?: GetPost200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'post': value.post,
    };
}

