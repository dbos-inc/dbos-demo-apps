name: CI for Hello world (extended) demo

on:
  push:
    branches: [ "main" ]
    paths:
      - 'hello-extended/**'
      - '.github/workflows/hello-world.yml'
  pull_request:
    types:
      - ready_for_review
      - opened
      - reopened
      - synchronize
    paths:
      - 'hello-extended/**'
      - '.github/workflows/hello-world.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # Service container for Postgres
    services:
      # Label used to access the service container.
      postgres:
        image: postgres:16
        env:
          # Specify the password for Postgres superuser.
          POSTGRES_PASSWORD: dbos
        # Set health checks to wait until postgres has started
        options: >-
          --name postgres
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Setup Postgres
        run: docker exec postgres psql -U postgres -c "CREATE DATABASE hello;"
        env:
          PGPASSWORD: dbos
      - name: Checkout demo app
        uses: actions/checkout@v3
        with:
          path: dbos-demo-apps
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Compile Hello World
        working-directory: dbos-demo-apps/hello-extended
        run: |
          npm install
          npx knex migrate:latest
          npm run build
        env:
          PGPASSWORD: dbos
          NPM_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
