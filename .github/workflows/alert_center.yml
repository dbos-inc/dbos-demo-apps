name: CI for alert center

on:
  push:
    branches: [ "main" ]
    paths:
      - 'typescript/alert-center/**'
      - '.github/workflows/alert_center.yml'
  pull_request:
    types:
      - ready_for_review
      - opened
      - reopened
      - synchronize
    paths:
      - 'typescript/alert-center/**'
      - '.github/workflows/alert_center.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: ['20', '22'] #, '23'] FIXME

    services:
      # Postgres service container
      postgres:
        image: postgres:16
        env:
          # Specify the password for Postgres superuser.
          POSTGRES_PASSWORD: dbos
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: 'Setup postgres config'
        run: |
          docker exec ${{ job.services.postgres.id }} sh -c 'echo "wal_level=logical" >> /var/lib/postgresql/data/postgresql.conf'
          docker restart ${{ job.services.postgres.id }}
      - uses: actions/checkout@v4.1.1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Compile and Test
        working-directory: typescript/alert-center/
        run: |
          npm ci
          npm run build
          npx dbos migrate
          npm test
          npm run lint
        env:
          PGPASSWORD: dbos

