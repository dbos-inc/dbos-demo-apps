/* tslint:disable */
/* eslint-disable */
/**
 * social-ts
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SendType } from './SendType';
import {
    SendTypeFromJSON,
    SendTypeFromJSONTyped,
    SendTypeToJSON,
} from './SendType';

/**
 * 
 * @export
 * @interface SendTimeline200ResponseTimelineInner
 */
export interface SendTimeline200ResponseTimelineInner {
    /**
     * 
     * @type {string}
     * @memberof SendTimeline200ResponseTimelineInner
     */
    postId: string;
    /**
     * 
     * @type {string}
     * @memberof SendTimeline200ResponseTimelineInner
     */
    fromUserId: string;
    /**
     * 
     * @type {Date}
     * @memberof SendTimeline200ResponseTimelineInner
     */
    sendDate: Date;
    /**
     * 
     * @type {SendType}
     * @memberof SendTimeline200ResponseTimelineInner
     */
    sendType: SendType;
    /**
     * 
     * @type {string}
     * @memberof SendTimeline200ResponseTimelineInner
     */
    postText: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SendTimeline200ResponseTimelineInner
     */
    postMentions: Array<string>;
}

/**
 * Check if a given object implements the SendTimeline200ResponseTimelineInner interface.
 */
export function instanceOfSendTimeline200ResponseTimelineInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "postId" in value;
    isInstance = isInstance && "fromUserId" in value;
    isInstance = isInstance && "sendDate" in value;
    isInstance = isInstance && "sendType" in value;
    isInstance = isInstance && "postText" in value;
    isInstance = isInstance && "postMentions" in value;

    return isInstance;
}

export function SendTimeline200ResponseTimelineInnerFromJSON(json: any): SendTimeline200ResponseTimelineInner {
    return SendTimeline200ResponseTimelineInnerFromJSONTyped(json, false);
}

export function SendTimeline200ResponseTimelineInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): SendTimeline200ResponseTimelineInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'postId': json['postId'],
        'fromUserId': json['fromUserId'],
        'sendDate': (new Date(json['sendDate'])),
        'sendType': SendTypeFromJSON(json['sendType']),
        'postText': json['postText'],
        'postMentions': json['postMentions'],
    };
}

export function SendTimeline200ResponseTimelineInnerToJSON(value?: SendTimeline200ResponseTimelineInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'postId': value.postId,
        'fromUserId': value.fromUserId,
        'sendDate': (value.sendDate.toISOString()),
        'sendType': SendTypeToJSON(value.sendType),
        'postText': value.postText,
        'postMentions': value.postMentions,
    };
}

